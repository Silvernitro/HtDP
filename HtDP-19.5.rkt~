;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-lambda-reader.ss" "lang")((modname HtDP-19.5) (read-case-sensitive #t) (teachpacks ((lib "image.rkt" "teachpack" "2htdp") (lib "universe.rkt" "teachpack" "2htdp") (lib "batch-io.rkt" "teachpack" "2htdp"))) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ((lib "image.rkt" "teachpack" "2htdp") (lib "universe.rkt" "teachpack" "2htdp") (lib "batch-io.rkt" "teachpack" "2htdp")) #f)))
;A Binary Tree (BT) is one of:
; - NONE
; - (make-node ssn name Node Node)

;A node is a struct:
(define-struct node [ssn name left right])

(define-struct no-info [])
(define NONE (make-no-info))

(define bt_eg (make-node
  15
  'd
  NONE
  (make-node
    24 'i NONE NONE)))

;BT number -> Boolean
;Evaluate if a given number occurs in a given BT.
(define (contains-BT? bt n)
  (cond [(no-info? bt) #false]
        [else (or (equal? (node-ssn bt) n)
                  (contains-BT? (node-left bt) n)
                  (contains-BT? (node-right bt) n)
                  )]
    )
  )